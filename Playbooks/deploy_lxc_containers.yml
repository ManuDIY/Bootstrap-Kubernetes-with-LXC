---
- hosts: proxmox_server
  tasks:
      - name: Creating a resource pool for the compute resources.
        shell: pvesh create /pools -poolid "{{ k8s_resource_pool }}" --Comment "Kubernetes Cluster made from CentOS 7 Linux Containers"
        ignore_errors: yes 

      - name: Downloading the newest CentOS LXC template.
        shell: pveam download {{ template_storage }} {{ lxc_template }}

      - name: Provisioning a container for the Kubernetes master.
        shell: >
            pct create {{ k8s_master_id }} {{ template_storage }}:vztmpl/{{ lxc_template }}
            --pool "{{ k8s_resource_pool }}" 
            --description "Kubernetes Master"
            --hostname "{{ k8s_master_hn }}" 
            --cores "{{ k8s_master_cpu }}"
            --memory "{{ k8s_master_mem }}" 
            --net0 "name=eth0,bridge={{ k8s_master_bridge }},ip={{ k8s_master_ip }}{{ k8s_master_sn }},gw={{ k8s_master_gw }},ip6=dhcp" 
            --nameserver "{{ k8s_master_ns }}"
            --searchdomain "{{ k8s_master_sd }}"
            --ostype "centos" 
            --swap "0" 
            --storage "{{ k8s_master_stg }}" 
            --ssh-public-keys "{{ k8s_ssh_key }}"

      - name: Pausing for 5 seconds to allow the container to finish being created.
        wait_for: timeout=5

      - name: Resizing the volume for the Master container.
        shell: pct resize {{ k8s_master_id }} rootfs {{ k8s_master_size }} 
      
      - name: Provisioning a container for the first Kubernetes node.
        shell: >
            pct create {{ k8s_node1_id }}
            {{ template_storage }}:vztmpl/{{ lxc_template }}
            --pool "{{ k8s_resource_pool }}" 
            --description "Kubernetes Node 1"
            --hostname "{{ k8s_node1_hn }}" 
            --cores "{{ k8s_node1_cpu }}"
            --memory "{{ k8s_node1_mem }}" 
            --net0 "name=eth0,bridge={{ k8s_node1_bridge }},ip={{ k8s_node1_ip }}{{ k8s_node1_sn }},gw={{ k8s_node1_gw }},ip6=dhcp" 
            --nameserver "{{ k8s_node1_ns }}"
            --searchdomain "{{ k8s_node1_sd }}"
            --ostype "centos" 
            --swap "0" 
            --storage "{{ k8s_node1_stg }}" 
            --ssh-public-keys "{{ k8s_ssh_key }}"

      - name: Pausing for 5 seconds to allow the container to finish being created.
        wait_for: timeout=5

      - name: Resizing the volume for the first node container.
        shell: pct resize {{ k8s_node1_id }} rootfs {{ k8s_node1_size }} 
      
      - name: Provisioning a container for the second Kuberntes node.
        shell: >
            pct create {{ k8s_node2_id }}
            {{ template_storage }}:vztmpl/{{ lxc_template }}
            --pool "{{ k8s_resource_pool }}" 
            --description "Kubernetes Node 2"
            --hostname "{{ k8s_node2_hn }}" 
            --cores "{{ k8s_node2_cpu }}"
            --memory "{{ k8s_node2_mem }}" 
            --net0 "name=eth0,bridge={{ k8s_node2_bridge }},ip={{ k8s_node2_ip }}{{ k8s_node2_sn }},gw={{ k8s_node2_gw }},ip6=dhcp"
            --nameserver "{{ k8s_node2_ns }}"
            --searchdomain "{{ k8s_node2_sd }}" 
            --ostype "centos" 
            --swap "0" 
            --storage "{{ k8s_node2_stg }}" 
            --ssh-public-keys "{{ k8s_ssh_key }}"

      - name: Pausing for 5 seconds to allow the container to finish being created.
        wait_for: timeout=5

      - name: Resizing the volume for the second Kubernetes node.
        shell: pct resize {{ k8s_node2_id }} rootfs {{ k8s_node2_size }} 
      
      - name: Provisioning a container for the third Kubernetes node.
        shell: >
            pct create {{ k8s_node3_id }}
            {{ template_storage }}:vztmpl/{{ lxc_template }}
            --pool "{{ k8s_resource_pool }}" 
            --description "Kubernetes Node 3"
            --hostname "{{ k8s_node3_hn }}" 
            --cores "{{ k8s_node3_cpu }}"
            --memory "{{ k8s_node3_mem }}" 
            --net0 "name=eth0,bridge={{ k8s_node3_bridge }},ip={{ k8s_node3_ip }}{{ k8s_node3_sn }},gw={{ k8s_node3_gw }},ip6=dhcp" 
            --nameserver "{{ k8s_node3_ns }}"
            --searchdomain "{{ k8s_node3_sd }}" 
            --ostype "centos" 
            --swap "0" 
            --storage "{{ k8s_node3_stg }}" 
            --ssh-public-keys "{{ k8s_ssh_key }}"

      - name: Pausing for 5 seconds to allow the container to finish being created.
        wait_for: timeout=5

      - name: Resizing the volume for the third Kubernetes node.
        shell: pct resize {{ k8s_node3_id }} rootfs {{ k8s_node3_size }} 

      - name: Starting the containers for the first time.
        shell: pct start {{ k8s_master_id }} && pct start {{ k8s_node1_id }} && pct start {{ k8s_node2_id }} && pct start {{ k8s_node3_id }}

      - name: Installing openssh-server & sudo on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- yum install -y openssh-server sudo

      - name: Enabling & starting sshd on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- systemctl enable --now sshd

      - name: Installing openssh-server & sudo on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- yum install -y openssh-server sudo

      - name: Enabling & starting sshd on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- systemctl enable --now sshd

      - name: Installing openssh-server & sudo on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- yum install -y openssh-server sudo

      - name: Enabling & starting sshd on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- systemctl enable --now sshd

      - name: Installing openssh-server & sudo on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- yum install -y openssh-server sudo

      - name: Enabling & starting sshd on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- systemctl enable --now sshd

      - name: Creating a centos user on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- adduser -G wheel centos 

      - name: Configuring the centos user on the Kubernetes master to be able to sudo without specifying a password.
        shell: lxc-attach -n {{ k8s_master_id }} -- sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers

      - name: Creating a .ssh directory in the home directory of the centos user on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- mkdir /home/centos/.ssh

      - name: Adding the ssh key to the centos user's authorized_keys file on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- cp /root/.ssh/authorized_keys /home/centos/.ssh/authorized_keys

      - name: Setting the correct permissions of the authorized_keys file for the centos user on the Kubernetes master.
        shell: lxc-attach -n {{ k8s_master_id }} -- chown -R centos /home/centos/.ssh/

      - name: Creating a centos user on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- adduser -G wheel centos 

      - name: Configuring the centos user on the first Kubernetes node to be able to sudo without specifying a password.
        shell: lxc-attach -n {{ k8s_node1_id }} -- sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers

      - name: Creating a .ssh directory in the home directory of the centos user on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- mkdir /home/centos/.ssh

      - name: Adding the ssh key to the centos user's authorized_keys file on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- cp /root/.ssh/authorized_keys /home/centos/.ssh/authorized_keys

      - name: Setting the correct permissions of the authorized_keys file for the centos user on the first Kubernetes node.
        shell: lxc-attach -n {{ k8s_node1_id }} -- chown -R centos /home/centos/.ssh/

      - name: Creating a centos user on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- adduser -G wheel centos 

      - name: Configuring the centos user on the second Kubernetes node to be able to sudo without specifying a password.
        shell: lxc-attach -n {{ k8s_node2_id }} -- sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers

      - name: Creating a .ssh directory in the home directory of the centos user on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- mkdir /home/centos/.ssh

      - name: Adding the ssh key to the centos user's authorized_keys file on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- cp /root/.ssh/authorized_keys /home/centos/.ssh/authorized_keys

      - name: Setting the correct permissions of the authorized_keys file for the centos user on the second Kubernetes node.
        shell: lxc-attach -n {{ k8s_node2_id }} -- chown -R centos /home/centos/.ssh/

      - name: Creating a centos user on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- adduser -G wheel centos 

      - name: Configuring the centos user on the third Kubernetes node to be able to sudo without specifying a password.
        shell: lxc-attach -n {{ k8s_node3_id }} -- sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers

      - name: Creating a .ssh directory in the home directory of the centos user on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- mkdir /home/centos/.ssh

      - name: Adding the ssh key to the centos user's authorized_keys file on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- cp /root/.ssh/authorized_keys /home/centos/.ssh/authorized_keys

      - name: Setting the correct permissions of the authorized_keys file for the centos user on the third Kubernetes node.
        shell: lxc-attach -n {{ k8s_node3_id }} -- chown -R centos /home/centos/.ssh/